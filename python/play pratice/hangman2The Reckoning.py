import csv#dictionary to hold all of the words done# big old list of words that we import and put in the dictionary as keys:len#get x letter words out of the dictionary and put it in a dictionary of all words#seperate words into families based on guessess#bank of possible words#scan for user enterd letter done# if statement that seperates the process of removing words and scoring a hit#two lists that take in x letter words# if cant remove words, check the len of all remaing words when "?" is replaced with guess#mkae function that tracks postion of letters in words needs to include words with duplicate lettersdef bubbleSort(thisList):    for number in range(len(thisList) - 1, 0, -1):        for i in range(number):            if thisList[i]>thisList[i + 1]:                jar = thisList[i]                thisList[i] = thisList[i + 1]                thisList[i + 1] = jardef getWords(limit):    basket=[]    alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"    for i in alpha:        location = "Words/"+i+"word.csv"        #location = "Words/Aword.csv"        with open(location, newline='') as csvfile:                spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')                for row in spamreader:                    basket.append(row)    finbasket = []    for i in range(len(basket)):        if len(basket[i][0]) != limit:            continue        elif basket[i-1][0]== basket[i][0]:             continue        elif "-" in basket[i][0] or "/" in basket[i][0] or "\'" in basket[i][0] or " " in basket[i][0]:            continue        elif not ("a" in basket[i][0] or "e" in basket[i][0] or "i" in basket[i][0] or "o" in basket[i][0] or "u" in basket[i][0]):            continue        else:            finbasket.append(basket[i][0])    return finbasketdef knockOut(guess,listOfPotentialWords):#the list of words needs to be coppied    shaved=[]    for i in range(len(listOfPotentialWords)):        if guess in listOfPotentialWords[i]:            continue        else:            shaved.append(listOfPotentialWords[i])    if len(shaved)==0:        return True    else:        return shaveddef wordFam(listOfPotentialWords,guess):    z ={}    outPut = 0    toReturn = []    for i in listOfPotentialWords:        newKey= ""        for j in range(len(i)):            if i[j]== guess:                newKey =newKey + guess            else:                newKey = newKey + "-"        if newKey in z.keys():            z[newKey].append(i)        else:            z[newKey] = [i]    for keys in z:        if len(keys)> outPut:            outPut = len(keys)            toReturn = z[keys]    #print("this is the dict", z)    #print("returning", toReturn)    return toReturndef updateUserProgress(userProgress, listOfPotentialWords, guess):    out= ""    for i in range(len(userProgress)):        #print(listOfPotentialWords[0][i])        if listOfPotentialWords[0][i] == guess:            out = out + guess        else:            out = out +userProgress[i]    return outdef theGame():    print("how many lives?")    lives = input()    lives = int(lives)    print("how long is the word?")    limit = input()    limit = int(limit)    userProgress = ""    listOfPotentialWords = getWords(limit)    for i in range(limit):        userProgress = userProgress + "?"    pastGuesses = []    while (lives != 0) and ("?" in userProgress):#runs loop and checks for an end        print("you have guessed:", pastGuesses)        print("make guess please")        guess = input()        check = knockOut(guess,listOfPotentialWords)        if guess in pastGuesses:            print("you already guessed this")            continue        pastGuesses.append(guess)        if type(check) == bool:            check = False        else:            check = True        if check:            listOfPotentialWords = knockOut(guess, listOfPotentialWords)            lives = lives -1            print("wrong! HAHAHA")        else:            listOfPotentialWords = wordFam(listOfPotentialWords,guess)            userProgress = updateUserProgress(userProgress, listOfPotentialWords,guess)            print("you got one...")        #print("this is the list of potent word", listOfPotentialWords)        print("Your progress so far:",userProgress)        print("you have "+str(lives)+" lives left")        bubbleSort(pastGuesses)        if lives == 0 or not ("?" in userProgress):            if lives == 0:                print("You Lost! HA!")            else:                print("I guess you win...")            print("the word was:", listOfPotentialWords[0] )            print("play again? y/n")            again = input()            if again == "y":                return True            else:                return Falsecontinues = Truewhile continues:    continues = theGame()